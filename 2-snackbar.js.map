{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["// Імпортуємо бібліотеку iziToast та її стилі\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Отримуємо форму\nconst form = document.querySelector('.form');\n\n// Функція для створення та обробки промісу\nfunction createPromise(delay, state) {\n  const promise = new Promise((resolve, reject) => {\n    const timerId = window.setTimeout(() => {\n      if (state === 'fulfilled') {\n        resolve(delay);\n      } else {\n        reject(delay);\n      }\n    }, delay);\n\n    // Очищення таймера при потребі\n    return () => {\n      window.clearTimeout(timerId);\n    };\n  });\n\n  return promise;\n}\n\n// Функція для показу успішного повідомлення\nfunction showSuccessMessage(delay) {\n  iziToast.success({\n    title: 'Success',\n    message: `✅ Fulfilled promise in ${delay}ms`,\n    position: 'topRight',\n    messageColor: '#fff',\n    backgroundColor: '#59A10D',\n    close: false,\n    closeOnClick: true,\n    timeout: 5000,\n  });\n}\n\n// Функція для показу повідомлення про помилку\nfunction showErrorMessage(delay) {\n  iziToast.error({\n    title: 'Error',\n    message: `❌ Rejected promise in ${delay}ms`,\n    position: 'topRight',\n    messageColor: '#fff',\n    backgroundColor: '#EF4040',\n    close: false,\n    closeOnClick: true,\n    timeout: 5000,\n  });\n}\n\n// Обробник подання форми\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  // Отримуємо значення з форми\n  const delayInput = event.target.elements.delay;\n  const stateInputs = event.target.elements.state;\n\n  const delay = Number(delayInput.value);\n  const state = Array.from(stateInputs).find(input => input.checked)?.value;\n\n  // Перевіряємо валідність введених даних\n  if (!delay || !state) {\n    iziToast.warning({\n      title: 'Warning',\n      message: 'Please fill in all fields',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  // Створюємо та обробляємо проміс\n  createPromise(delay, state).then(showSuccessMessage).catch(showErrorMessage);\n\n  // Очищаємо форму\n  event.target.reset();\n});\n"],"names":["form","createPromise","delay","state","resolve","reject","timerId","showSuccessMessage","iziToast","showErrorMessage","event","delayInput","stateInputs","_a","input"],"mappings":"mIAKA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAG3C,SAASC,EAAcC,EAAOC,EAAO,CAgBnC,OAfgB,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC/C,MAAMC,EAAU,OAAO,WAAW,IAAM,CAClCH,IAAU,YACZC,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAEf,EAAEA,CAAK,EAGR,MAAO,IAAM,CACX,OAAO,aAAaI,CAAO,CACjC,CACA,CAAG,CAGH,CAGA,SAASC,EAAmBL,EAAO,CACjCM,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,0BAA0BN,CAAK,KACxC,SAAU,WACV,aAAc,OACd,gBAAiB,UACjB,MAAO,GACP,aAAc,GACd,QAAS,GACb,CAAG,CACH,CAGA,SAASO,EAAiBP,EAAO,CAC/BM,EAAS,MAAM,CACb,MAAO,QACP,QAAS,yBAAyBN,CAAK,KACvC,SAAU,WACV,aAAc,OACd,gBAAiB,UACjB,MAAO,GACP,aAAc,GACd,QAAS,GACb,CAAG,CACH,CAGAF,EAAK,iBAAiB,SAAUU,GAAS,OACvCA,EAAM,eAAc,EAGpB,MAAMC,EAAaD,EAAM,OAAO,SAAS,MACnCE,EAAcF,EAAM,OAAO,SAAS,MAEpCR,EAAQ,OAAOS,EAAW,KAAK,EAC/BR,GAAQU,EAAA,MAAM,KAAKD,CAAW,EAAE,KAAKE,GAASA,EAAM,OAAO,IAAnD,YAAAD,EAAsD,MAGpE,GAAI,CAACX,GAAS,CAACC,EAAO,CACpBK,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,4BACT,SAAU,UAChB,CAAK,EACD,MACD,CAGDP,EAAcC,EAAOC,CAAK,EAAE,KAAKI,CAAkB,EAAE,MAAME,CAAgB,EAG3EC,EAAM,OAAO,OACf,CAAC"}